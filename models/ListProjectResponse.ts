/* tslint:disable */
/* eslint-disable */
/**
 * Chaos
 * Central Management API - publicly exposed set of APIs for managing deployments
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@qernal.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { PaginationMeta } from './PaginationMeta';
import {
    PaginationMetaFromJSON,
    PaginationMetaFromJSONTyped,
    PaginationMetaToJSON,
} from './PaginationMeta';
import type { ProjectResponse } from './ProjectResponse';
import {
    ProjectResponseFromJSON,
    ProjectResponseFromJSONTyped,
    ProjectResponseToJSON,
} from './ProjectResponse';

/**
 * List of projects
 * @export
 * @interface ListProjectResponse
 */
export interface ListProjectResponse {
    /**
     * 
     * @type {PaginationMeta}
     * @memberof ListProjectResponse
     */
    meta: PaginationMeta;
    /**
     * 
     * @type {Array<ProjectResponse>}
     * @memberof ListProjectResponse
     */
    data: Array<ProjectResponse>;
}

/**
 * Check if a given object implements the ListProjectResponse interface.
 */
export function instanceOfListProjectResponse(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "meta" in value;
    isInstance = isInstance && "data" in value;

    return isInstance;
}

export function ListProjectResponseFromJSON(json: any): ListProjectResponse {
    return ListProjectResponseFromJSONTyped(json, false);
}

export function ListProjectResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ListProjectResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'meta': PaginationMetaFromJSON(json['meta']),
        'data': ((json['data'] as Array<any>).map(ProjectResponseFromJSON)),
    };
}

export function ListProjectResponseToJSON(value?: ListProjectResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'meta': PaginationMetaToJSON(value.meta),
        'data': ((value.data as Array<any>).map(ProjectResponseToJSON)),
    };
}

