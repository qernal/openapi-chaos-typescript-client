/* tslint:disable */
/* eslint-disable */
/**
 * Chaos
 * Central Management API - publicly exposed set of APIs for managing deployments
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@qernal.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface GetOrganisationsPageParameter
 */
export interface GetOrganisationsPageParameter {
    /**
     * Offset
     * @type {number}
     * @memberof GetOrganisationsPageParameter
     */
    before?: number;
    /**
     * Offset
     * @type {number}
     * @memberof GetOrganisationsPageParameter
     */
    after?: number;
    /**
     * Limit
     * @type {number}
     * @memberof GetOrganisationsPageParameter
     */
    size?: number;
}

/**
 * Check if a given object implements the GetOrganisationsPageParameter interface.
 */
export function instanceOfGetOrganisationsPageParameter(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function GetOrganisationsPageParameterFromJSON(json: any): GetOrganisationsPageParameter {
    return GetOrganisationsPageParameterFromJSONTyped(json, false);
}

export function GetOrganisationsPageParameterFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetOrganisationsPageParameter {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'before': !exists(json, 'before') ? undefined : json['before'],
        'after': !exists(json, 'after') ? undefined : json['after'],
        'size': !exists(json, 'size') ? undefined : json['size'],
    };
}

export function GetOrganisationsPageParameterToJSON(value?: GetOrganisationsPageParameter | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'before': value.before,
        'after': value.after,
        'size': value.size,
    };
}

