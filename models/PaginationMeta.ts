/* tslint:disable */
/* eslint-disable */
/**
 * Chaos
 * Central Management API - publicly exposed set of APIs for managing deployments
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@qernal.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { PaginationLinks } from './PaginationLinks';
import {
    PaginationLinksFromJSON,
    PaginationLinksFromJSONTyped,
    PaginationLinksToJSON,
} from './PaginationLinks';

/**
 * Meta object for pagination use
 * @export
 * @interface PaginationMeta
 */
export interface PaginationMeta {
    /**
     * 
     * @type {number}
     * @memberof PaginationMeta
     */
    results: number;
    /**
     * 
     * @type {number}
     * @memberof PaginationMeta
     */
    start: number;
    /**
     * 
     * @type {number}
     * @memberof PaginationMeta
     */
    end: number;
    /**
     * 
     * @type {number}
     * @memberof PaginationMeta
     */
    pages: number;
    /**
     * 
     * @type {PaginationLinks}
     * @memberof PaginationMeta
     */
    links: PaginationLinks;
}

/**
 * Check if a given object implements the PaginationMeta interface.
 */
export function instanceOfPaginationMeta(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "results" in value;
    isInstance = isInstance && "start" in value;
    isInstance = isInstance && "end" in value;
    isInstance = isInstance && "pages" in value;
    isInstance = isInstance && "links" in value;

    return isInstance;
}

export function PaginationMetaFromJSON(json: any): PaginationMeta {
    return PaginationMetaFromJSONTyped(json, false);
}

export function PaginationMetaFromJSONTyped(json: any, ignoreDiscriminator: boolean): PaginationMeta {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'results': json['results'],
        'start': json['start'],
        'end': json['end'],
        'pages': json['pages'],
        'links': PaginationLinksFromJSON(json['links']),
    };
}

export function PaginationMetaToJSON(value?: PaginationMeta | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'results': value.results,
        'start': value.start,
        'end': value.end,
        'pages': value.pages,
        'links': PaginationLinksToJSON(value.links),
    };
}

