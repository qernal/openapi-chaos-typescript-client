/* tslint:disable */
/* eslint-disable */
/**
 * Chaos
 * Central Management API - publicly exposed set of APIs for managing deployments
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@qernal.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { BadRequestResponseFields } from './BadRequestResponseFields';
import {
    BadRequestResponseFieldsFromJSON,
    BadRequestResponseFieldsFromJSONTyped,
    BadRequestResponseFieldsToJSON,
} from './BadRequestResponseFields';

/**
 * Bad request
 * @export
 * @interface BadRequestResponse
 */
export interface BadRequestResponse {
    /**
     * 
     * @type {string}
     * @memberof BadRequestResponse
     */
    message: string;
    /**
     * 
     * @type {BadRequestResponseFields}
     * @memberof BadRequestResponse
     */
    fields: BadRequestResponseFields;
}

/**
 * Check if a given object implements the BadRequestResponse interface.
 */
export function instanceOfBadRequestResponse(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "message" in value;
    isInstance = isInstance && "fields" in value;

    return isInstance;
}

export function BadRequestResponseFromJSON(json: any): BadRequestResponse {
    return BadRequestResponseFromJSONTyped(json, false);
}

export function BadRequestResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): BadRequestResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'message': json['message'],
        'fields': BadRequestResponseFieldsFromJSON(json['fields']),
    };
}

export function BadRequestResponseToJSON(value?: BadRequestResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'message': value.message,
        'fields': BadRequestResponseFieldsToJSON(value.fields),
    };
}

